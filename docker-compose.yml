services:
  postgres:
    image: postgres:16
    ports:
      - ${DATABASE_PORT}:5432
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
      - TZ=${TZ}
      - PGTZ=${TZ}
    volumes:
      - postgres:/var/lib/postgresql/data
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 5s
      resources:
        limits:
          cpus: '1'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 512M

  app:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: images-gemini
    restart: unless-stopped
    env_file: .env
    environment:
      - GEMINI_API_KEY= $GEMINI_API_KEY
      - DATABASE_HOST=$DATABASE_HOST
      - DATABASE_PORT=$DATABASE_PORT
      - DATABASE_PORT_TEST=$DATABASE_PORT_TEST
      - DATABASE_USER=$DATABASE_USER
      - DATABASE_PASSWORD=$DATABASE_PASSWORD
      - DATABASE_NAME=$DATABASE_NAME
      - DATABASE_URL=$DATABASE_URL
      - AWS_REGION=$AWS_REGION
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - AWS_BUCKET_NAME=$AWS_BUCKET_NAME
      - AWS_BUCKET_URL=$AWS_BUCKET_URL
    ports:
      - "80:3333"
    depends_on:
      - postgres
volumes:
  postgres:
    driver: local
